PowerShell Command:

az vm extension set --resource-group azuredemo --vm-name linuxvm --name customScript --publisher Microsoft.Azure.Extensions --settings customscript.json



install_web.sh1:

apt-get update -y && apt-get upgrade -y

apt-get install -y nginx


customscript.json: Unix Server: 

{
  "fileUris": ["https://raw.githubusercontent.com/alashro/sampleweb/master/install_web.sh"],
  "commandToExecute": "./install_web.sh"
}


appcustomscript.json  Windows Server: 
eg. 
  {
    "fileUris": ["https://raw.githubusercontent.com/achintjain84/azure-104/main/InstallIIS.ps1"],
    "commandToExecute": "powershell.exe ./InstallIIS.ps1"
  }
  
=============

#cloud-config
package_upgrade: true
packages:
  - nginx
  
  
============= 
InstallIIS.ps1:

import-module servermanager
add-windowsfeature web-server -includeallsubfeature





====VM Scale Set===

---Linux machine update commands:
sudo apt-get update

---Install Stress tool
sudo apt-get install -y stress

sudo stress  â€”cpu 70


---Create a VMSS using CLI:
az vmss create -n SS-02-CLI -g RG-VM-SS --instance-count 1 --image Win2016Datacenter --data-disk-sizes-gb 10 --vnet-name SS-02-CLI-vnet --subnet default --public-ip-per-vm --admin-username achint




// Custom Script for add Extension for a scale set using command line
1. Add the command in GitHub eg. https://raw.githubusercontent.com/achintjain84/azure-104/main/InstallIIS.ps1
2. Add the GitHub path in appcustomscript.json 
eg. 
  {
    "fileUris": ["https://raw.githubusercontent.com/achintjain84/azure-104/main/InstallIIS.ps1"],
    "commandToExecute": "powershell.exe ./InstallIIS.ps1"
  }
3. Upload the customscript in CLI : 
4. Execute below command.

az vmss extension set --publisher "Microsoft.Compute" --version 1.10 --resource-group RG-VM-SS --vmss-name SS-02-CLI --settings "appcustomscript.json" --name CustomScriptExtension







====VMSS Load Balancing Practice ====

1. Add the following to the install.ps1 file

    Add-WindowsFeature Web-Server
    Set-Content -Path "C:\inetpub\wwwroot\Default.html" -Value "This is the server $($env:computername) !"

2. Execute the following commands for custom script extensions

    $config = @{
      "fileUris" = (,"https://storageaccdr.blob.core.windows.net/script-win-lb/InstallIIS.ps1");
      "commandToExecute" = "powershell -ExecutionPolicy Unrestricted -File InstallIIS.ps1"
    }

    $set = Get-AzVmss -ResourceGroupName "RG-VM-SS" -VMScaleSetName "VM-VMSS-LB"
    
    $set = Add-AzVmssExtension -VirtualMachineScaleSet $set -Name "customScript" -Publisher "Microsoft.Compute" -Type "CustomScriptExtension" -TypeHandlerVersion 1.9 -Setting $config
    
    Update-AzVmss -ResourceGroupName "RG-VM-SS" -Name "VM-VMSS-LB" -VirtualMachineScaleSet $set




===== Create VM Image ====


 1. Login to machine.
 2. navigate to sysprep folder and run sysprep tool:
    %windir%\system32\sysprep
 3. STOP/Deallocate the VM:
    Stop-AzVm -ResourceGroupName RG-01 -Name VM-IMAGE -FORCE




======Resize VM =====

  1. $vm = Get-AzVM -ResourceGroupName RG-01 -VMName VM-02

  2. $vm.HardwareProfile.VmSize ="Standard_B1s"

  3. Update-AzVM -VM $vm -ResourceGroupName RG-01
  
  
 
  
  
  
  
  
  
  
  
  
    
    
    
    
    
    
    
